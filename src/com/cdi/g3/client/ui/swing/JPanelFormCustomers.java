/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cdi.g3.client.ui.swing;

import com.cdi.g3.common.exception.CheckException;
import com.cdi.g3.common.exception.FinderException;
import com.cdi.g3.common.logging.Trace;
import com.cdi.g3.server.domain.customers.Adress;
import com.cdi.g3.server.domain.customers.Customer;
import com.cdi.g3.server.service.customers.AdressService;
import com.cdi.g3.server.service.customers.CustomerService;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Apotheas
 */
public class JPanelFormCustomers extends javax.swing.JPanel {
    
    //public class JPanelFormCustomers extends  JDesktopPane{
    
    DefaultTableModel myModelAdressShip = new DefaultTableModel();
    
    
    DefaultTableModel myModelAdressBill = new DefaultTableModel();
    Vector adressShipList = new Vector();
    Vector adressBillList = new Vector();
    DateFormat df = new SimpleDateFormat("dd-MM-YYYY");

    public DefaultTableModel getMyModelAdressBill() {
        return myModelAdressBill;
    }
    
    
    

    /**
     * Creates new form Accounts
     */
    public JPanelFormCustomers() {
        initComponents(); 
        jTable1.setAutoCreateRowSorter(true);
        jPanelShippingAdress.setVisible(false);
        jPanelBillingAddress.setVisible(false);
        jTextIdAdressBill.setEditable(true);
        jTextIdAdressShipp.setEditable(true);
        jTextIdAdressBill.setEditable(true);
        jButtonCreateAdressShip.setVisible(false);
        jButtonCreateAdressBill.setVisible(false);
        jTable1.setVisible(true);
        jButton1.setVisible(false);
        jButton2.setVisible(false);
//        jComboBoxShip.setModel(initComboAdressShipModel(adressShipList));
//        jComboBoxBill.setModel(initComboAdressBillModel(adressBillList));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanelAccounts = new javax.swing.JPanel();
        jTabbedPaneManageAccount = new javax.swing.JTabbedPane();
        jScrollPaneTree1 = new javax.swing.JScrollPane();
        jTreeCustomers = new javax.swing.JTree();
        jPanelAccount = new javax.swing.JPanel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelLogin = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<String>();
        jTextFirstName = new javax.swing.JTextField();
        jTextPassword = new javax.swing.JTextField();
        jLabelPassword = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jLabelLastName = new javax.swing.JLabel();
        jTextLastName = new javax.swing.JTextField();
        jTextEmail = new javax.swing.JTextField();
        jLabelCompany = new javax.swing.JLabel();
        jTextCompany = new javax.swing.JTextField();
        jPanelShippingAdress = new javax.swing.JPanel();
        jLabeNameReceiverAdressShipp = new javax.swing.JLabel();
        jTextNameReceiverAdressShipp = new javax.swing.JTextField();
        jLabelStreetShipp = new javax.swing.JLabel();
        jLabelZipCodeShipp = new javax.swing.JLabel();
        jLabelCityShipp = new javax.swing.JLabel();
        jTextStreetShipp = new javax.swing.JTextField();
        jTextCityShipp = new javax.swing.JTextField();
        jTextZipCodeShipp = new javax.swing.JTextField();
        jTextNumStreetShipp = new javax.swing.JTextField();
        jLabelNumStreetShipp = new javax.swing.JLabel();
        jTextStreet2Shipp = new javax.swing.JTextField();
        jLabelStreet2Shipp = new javax.swing.JLabel();
        jTextCountryShipp = new javax.swing.JTextField();
        jLabelCountryShipp = new javax.swing.JLabel();
        jTextIdAdressShipp = new javax.swing.JTextField();
        jLabelIdAdressShipp = new javax.swing.JLabel();
        jPanelBillingAddress = new javax.swing.JPanel();
        jLabelZipCodeBill = new javax.swing.JLabel();
        jTextCityBill = new javax.swing.JTextField();
        jLabelNameReceiverAdressBill = new javax.swing.JLabel();
        jTextIdAdressBill = new javax.swing.JTextField();
        jTextNameReceiverAdressBill = new javax.swing.JTextField();
        jTextZipCodeBill = new javax.swing.JTextField();
        jLabelStreetBill = new javax.swing.JLabel();
        jLabelIdAdressBill = new javax.swing.JLabel();
        jTextStreetBill = new javax.swing.JTextField();
        jLabelCityBill = new javax.swing.JLabel();
        jTextNumStreetBill = new javax.swing.JTextField();
        jLabelNumStreetBill = new javax.swing.JLabel();
        jTextCountryBill = new javax.swing.JTextField();
        jLabelCountryBill = new javax.swing.JLabel();
        jTextStreet2Bill = new javax.swing.JTextField();
        jLabelStreet2Bill = new javax.swing.JLabel();
        jComboBoxShip = new javax.swing.JComboBox();
        jComboBoxBill = new javax.swing.JComboBox();
        jPanelManage = new javax.swing.JPanel();
        jTextSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabelSearch = new javax.swing.JLabel();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextLogin = new javax.swing.JTextField();
        jButtonAdressShipping = new javax.swing.JButton();
        jButtonAdressBilling = new javax.swing.JButton();
        jButtonCreateAdressShip = new javax.swing.JButton();
        jButtonCreateAdressBill = new javax.swing.JButton();
        jButtonCreate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new java.awt.BorderLayout());

        jTreeCustomers.setBorder(javax.swing.BorderFactory.createTitledBorder("Profils"));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Status");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Active");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("blue");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("violet");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("red");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("yellow");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("BlackListed");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("basketball");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("soccer");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("football");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("hockey");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTreeCustomers.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTreeCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTreeCustomersMouseClicked(evt);
            }
        });
        jScrollPaneTree1.setViewportView(jTreeCustomers);

        jTabbedPaneManageAccount.addTab("Consult", jScrollPaneTree1);

        jPanelAccount.setBorder(javax.swing.BorderFactory.createTitledBorder("Account"));
        jPanelAccount.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelEmail.setText("Email  :");
        jPanelAccount.add(jLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 127, 35, -1));

        jLabelLogin.setText("Login  :");
        jPanelAccount.add(jLabelLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 101, -1, -1));

        jLabelStatus.setText("Status  :");
        jPanelAccount.add(jLabelStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive", "BlackList" }));
        jComboBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStatusActionPerformed(evt);
            }
        });
        jPanelAccount.add(jComboBoxStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 122, -1));
        jPanelAccount.add(jTextFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 138, -1));

        jTextPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPasswordActionPerformed(evt);
            }
        });
        jPanelAccount.add(jTextPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 121, -1));

        jLabelPassword.setText("Password  :");
        jPanelAccount.add(jLabelPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, -1, -1));

        jLabelFirstName.setText("First name :");
        jPanelAccount.add(jLabelFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 153, -1, -1));

        jLabelLastName.setText("Last  name :");
        jPanelAccount.add(jLabelLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 178, -1, -1));
        jPanelAccount.add(jTextLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 138, -1));

        jTextEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEmailActionPerformed(evt);
            }
        });
        jPanelAccount.add(jTextEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 138, -1));

        jLabelCompany.setText("Company  : ");
        jPanelAccount.add(jLabelCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, -1, -1));

        jTextCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCompanyActionPerformed(evt);
            }
        });
        jPanelAccount.add(jTextCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 123, -1));

        jPanelShippingAdress.setBorder(javax.swing.BorderFactory.createTitledBorder("Shipping adress"));

        jLabeNameReceiverAdressShipp.setText("Last Name  :");

        jLabelStreetShipp.setText("Street   :");

        jLabelZipCodeShipp.setText("Zip Code  :");

        jLabelCityShipp.setText("City  :");

        jTextZipCodeShipp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextZipCodeShippActionPerformed(evt);
            }
        });

        jLabelNumStreetShipp.setText("Num Street   :");

        jLabelStreet2Shipp.setText("Street2");

        jLabelCountryShipp.setText("Country");

        jLabelIdAdressShipp.setText("Id Adress Ship");

        javax.swing.GroupLayout jPanelShippingAdressLayout = new javax.swing.GroupLayout(jPanelShippingAdress);
        jPanelShippingAdress.setLayout(jPanelShippingAdressLayout);
        jPanelShippingAdressLayout.setHorizontalGroup(
            jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShippingAdressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShippingAdressLayout.createSequentialGroup()
                        .addComponent(jLabeNameReceiverAdressShipp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextNameReceiverAdressShipp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelShippingAdressLayout.createSequentialGroup()
                        .addComponent(jLabelNumStreetShipp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextNumStreetShipp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelShippingAdressLayout.createSequentialGroup()
                        .addComponent(jLabelStreetShipp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextStreetShipp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShippingAdressLayout.createSequentialGroup()
                        .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelZipCodeShipp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelStreet2Shipp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextStreet2Shipp, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(jTextZipCodeShipp)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShippingAdressLayout.createSequentialGroup()
                        .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCityShipp)
                            .addComponent(jLabelCountryShipp)
                            .addComponent(jLabelIdAdressShipp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextIdAdressShipp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextCountryShipp, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                .addComponent(jTextCityShipp))))))
        );
        jPanelShippingAdressLayout.setVerticalGroup(
            jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShippingAdressLayout.createSequentialGroup()
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeNameReceiverAdressShipp, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNameReceiverAdressShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumStreetShipp)
                    .addComponent(jTextNumStreetShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStreetShipp)
                    .addComponent(jTextStreetShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextStreet2Shipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStreet2Shipp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextZipCodeShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelZipCodeShipp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCityShipp)
                    .addComponent(jTextCityShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCountryShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCountryShipp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelShippingAdressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextIdAdressShipp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIdAdressShipp))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jPanelAccount.add(jPanelShippingAdress, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 330));

        jPanelBillingAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Billing adress"));

        jLabelZipCodeBill.setText("Zip Code  :");

        jLabelNameReceiverAdressBill.setText("Last Name  :");

        jTextZipCodeBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextZipCodeBillActionPerformed(evt);
            }
        });

        jLabelStreetBill.setText("Street   :");

        jLabelIdAdressBill.setText("Id Adress Bill");

        jLabelCityBill.setText("City  :");

        jLabelNumStreetBill.setText("Num Street   :");

        jLabelCountryBill.setText("Country");

        jLabelStreet2Bill.setText("Street2");

        javax.swing.GroupLayout jPanelBillingAddressLayout = new javax.swing.GroupLayout(jPanelBillingAddress);
        jPanelBillingAddress.setLayout(jPanelBillingAddressLayout);
        jPanelBillingAddressLayout.setHorizontalGroup(
            jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelNumStreetBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jTextNumStreetBill, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelNameReceiverAdressBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextNameReceiverAdressBill, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCountryBill)
                            .addComponent(jLabelCityBill))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextCountryBill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextCityBill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelStreetBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextStreetBill, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelIdAdressBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextIdAdressBill, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelStreet2Bill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextStreet2Bill, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelZipCodeBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextZipCodeBill, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelBillingAddressLayout.setVerticalGroup(
            jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameReceiverAdressBill)
                    .addComponent(jTextNameReceiverAdressBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextNumStreetBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumStreetBill))
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jTextStreet2Bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelStreetBill)
                            .addComponent(jTextStreetBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelStreet2Bill)))
                .addGap(14, 14, 14)
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jTextZipCodeBill, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextCityBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBillingAddressLayout.createSequentialGroup()
                        .addComponent(jLabelZipCodeBill)
                        .addGap(19, 19, 19)
                        .addComponent(jLabelCityBill)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCountryBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCountryBill))
                .addGap(6, 6, 6)
                .addGroup(jPanelBillingAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIdAdressBill)
                    .addComponent(jTextIdAdressBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jPanelAccount.add(jPanelBillingAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 270, 310));

        jComboBoxShip.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxShipActionPerformed(evt);
            }
        });
        jPanelAccount.add(jComboBoxShip, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 111, -1));

        jComboBoxBill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBillActionPerformed(evt);
            }
        });
        jPanelAccount.add(jComboBoxBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, 133, -1));

        jPanelManage.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage"));
        jPanelManage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanelManage.add(jTextSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 142, -1));

        jButtonSearch.setText("search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jPanelManage.add(jButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        jLabelSearch.setText("id/pseudo/email  :");
        jPanelManage.add(jLabelSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanelManage.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanelManage.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 70, -1));

        jPanelAccount.add(jPanelManage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 680, 90));

        jTextLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLoginActionPerformed(evt);
            }
        });
        jPanelAccount.add(jTextLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 138, -1));

        jButtonAdressShipping.setText("Add AdressChipping");
        jButtonAdressShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdressShippingActionPerformed(evt);
            }
        });
        jPanelAccount.add(jButtonAdressShipping, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jButtonAdressBilling.setText("Add AdressBilling");
        jButtonAdressBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdressBillingActionPerformed(evt);
            }
        });
        jPanelAccount.add(jButtonAdressBilling, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, -1, -1));

        jButtonCreateAdressShip.setText("Create Adress Shipping");
        jButtonCreateAdressShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateAdressShipActionPerformed(evt);
            }
        });
        jPanelAccount.add(jButtonCreateAdressShip, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, -1, -1));

        jButtonCreateAdressBill.setText("Create Adress Billing");
        jButtonCreateAdressBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateAdressBillActionPerformed(evt);
            }
        });
        jPanelAccount.add(jButtonCreateAdressBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, 145, -1));

        jButtonCreate.setText("Create Customer");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });
        jPanelAccount.add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, -1, -1));

        jButton1.setText("Update Adress Shipping");
        jPanelAccount.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, -1, -1));

        jButton2.setText("Update Adress Billing");
        jPanelAccount.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, -1, -1));

        jTabbedPaneManageAccount.addTab("Manage", jPanelAccount);

        jTable1.setModel(initCustomersModel());
        jScrollPane1.setViewportView(jTable1);

        jTabbedPaneManageAccount.addTab("Customers", jScrollPane1);

        javax.swing.GroupLayout jPanelAccountsLayout = new javax.swing.GroupLayout(jPanelAccounts);
        jPanelAccounts.setLayout(jPanelAccountsLayout);
        jPanelAccountsLayout.setHorizontalGroup(
            jPanelAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneManageAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 1113, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanelAccountsLayout.setVerticalGroup(
            jPanelAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccountsLayout.createSequentialGroup()
                .addComponent(jTabbedPaneManageAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );

        add(jPanelAccounts, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeCustomersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeCustomersMouseClicked
        final String mname = "jTreeCustomersMouseClicked";
        CustomerService serviceCustomer = new CustomerService();
        try {
            Collection customers = serviceCustomer.findCustomers();
            jTreeCustomers.setModel(initCustomersTreeModel(customers));
        } catch (FinderException ex) {
            Logger.getLogger(JPanelFormCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTreeCustomersMouseClicked

    private void jTextLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLoginActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        try {
            CustomerService serviceCustomer = new CustomerService();
            Customer customer = serviceCustomer.findCustomer(jTextSearch.getText());

            jTextLogin.setText(customer.getLoginCustomer());
            jTextFirstName.setText(customer.getFirstNameCustomer());
            jTextLastName.setText(customer.getLastNameCustomer());
            jTextEmail.setText(customer.getEmailCustomer());
            jTextPassword.setText(customer.getPasswordCustomer());
           
            adressShipList.removeAllElements();
            adressShipList.addAll(customer.getListAddressShipping());
            jComboBoxShip.setModel(initAdressShipComboBoxModel(customer.getListAddressShipping()));

            adressBillList.removeAllElements();
            adressBillList.addAll(customer.getListAddressBilling());
            jComboBoxBill.setModel(initAdressBillComboBoxModel(customer.getListAddressShipping()));

            //            for (Iterator iterator = customer.getListAddressShipping().iterator(); iterator.hasNext();) {
                //                final Adress adressShipping = (Adress) iterator.next();
                //                jTextNameReceiverAdressShipp.setText(adressShipping.getNameReceiverAdress());
                //                jTextStreetShipp.setText(adressShipping.getNameStreetAdress());
                //                jTextZipCodeShipp.setText(adressShipping.getZipcodeAdress());
                //                jTextCityShipp.setText(adressShipping.getCityAdress());
                //                jTextCompany.setText(adressShipping.getNameCompanyReceiverAdress().getNameCompany());
                //                jTextIdAdressShipp.setText(adressShipping.getId());
                //            }

            //            for (Iterator iterator = customer.getListAddressBilling().iterator(); iterator.hasNext();) {
                //                final Adress adressBilling = (Adress) iterator.next();
                //                jTextNameReceiverAdressBill.setText(adressBilling.getNameReceiverAdress());
                //                jTextStreetBill.setText(adressBilling.getNameStreetAdress());
                //                jTextZipCodeBill.setText(adressBilling.getZipcodeAdress());
                //                jTextCityBill.setText(adressBilling.getCityAdress());
                //                jTextCompany.setText(adressBilling.getNameCompanyReceiverAdress().getNameCompany());
                //                jTextIdAdressBill.setText(adressBilling.getId());
                //            }

        } catch (FinderException ex) {
            Logger.getLogger(JPanelFormCustomers.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CheckException ex) {
            Logger.getLogger(JPanelFormCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        final String mname = "jButtonDeleteActionPerformed";

        final String customerId = jTextSearch.getText();
        if ("".equals(customerId)) {
            JOptionPane.showMessageDialog(this, "You have to enter an customer login ", "Delete", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Asks if we want to remove the customer
        final int anwser = JOptionPane.showConfirmDialog(this, "Do you want to remove customer login " + customerId, "Delete", JOptionPane.YES_NO_OPTION);
        if (anwser == JOptionPane.NO_OPTION) {
            return;
        }

        final CustomerService serviceCustomer = new CustomerService();
        try {
            serviceCustomer.deleteCustomer(customerId);

            JOptionPane.showMessageDialog(this, "Customer login " + customerId
                + " is deleted", "info message", JOptionPane.INFORMATION_MESSAGE);

            //            jComboBoxCarnet.setModel(initCarnetModel());
            //            jTree1.setModel(initCarnetTreeModel());
            //            clearFrame();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cannot access the customer service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);
        } // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        final String mname = "jButtonUpdateActionPerformed";
        CustomerService serviceCustomer = new CustomerService();
        AdressService serviceAdress = new AdressService();
        Customer customer = null;
        try {
            // Sets all the customer data
            //customer customerf = serviceCustomer.findCustomer(Id);
            customer = new Customer(jTextFirstName.getText(), jTextLastName.getText(), jTextEmail.getText(), jTextPassword.getText());
            customer.setId(jTextLogin.getText());

            Adress adressShipping = new Adress(jTextIdAdressShipp.getText());
            adressShipping.setNameReceiverAdress(jTextNameReceiverAdressShipp.getText());
            adressShipping.setNameStreetAdress(jTextStreetShipp.getText());
            adressShipping.setZipcodeAdress(jTextZipCodeShipp.getText());
            adressShipping.setCityAdress(jTextCityShipp.getText());
            adressShipping.setCustomerShipAdress(customer);
            adressShipping.setCustomerBillAdress(customer);

            Adress adressBilling = new Adress(jTextIdAdressBill.getText());
            adressBilling.setNameReceiverAdress(jTextNameReceiverAdressBill.getText());
            adressBilling.setNameStreetAdress(jTextStreetBill.getText());
            adressBilling.setZipcodeAdress(jTextZipCodeBill.getText());
            adressBilling.setCityAdress(jTextCityBill.getText());
            adressBilling.setCustomerBillAdress(customer);

            serviceAdress.updateAdress(adressBilling);
            //serviceAdress.updateAdress(adressShipping);

            // Asks if we want to remove the customer
            final int anwser = JOptionPane.showConfirmDialog(this, "Do you want to update customer "
                + customer.getId() + " " + customer.getLastNameCustomer(), "Delete", JOptionPane.YES_NO_OPTION);
            if (anwser == JOptionPane.NO_OPTION) {
                return;
            }

            serviceCustomer.updateCustomer(customer);

            // Create the customer
            JOptionPane.showMessageDialog(this, "Customer number " + customer.getId()
                + " is updeted", "info message", JOptionPane.INFORMATION_MESSAGE);

            //            jComboBoxCarnet.setModel(initCarnetModel());
            //            jTree1.setModel(initCarnetTreeModel());
            //textContactId.setText(contact.getIdContact());
            //textContactDate.setText(DateFormat.getDateInstance().format(result.getContactDate()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cannot access the customer service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jComboBoxShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxShipActionPerformed
        jComboBoxShip.setModel(initAdressShipComboBoxModel(adressShipList));
        final Adress adressShipping = ((Adress) jComboBoxShip.getSelectedItem());
        setChampsShippingAdress(adressShipping);        
        jButtonCreateAdressShip.setVisible(false);
        jComboBoxShip.setVisible(true);
        jButton1.setVisible(true);
        
    }//GEN-LAST:event_jComboBoxShipActionPerformed

    private void jTextZipCodeBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextZipCodeBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextZipCodeBillActionPerformed

    private void jButtonCreateAdressShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateAdressShipActionPerformed
        final String mname = "jButtonCreateActionPerformed";
        AdressService serviceAdress = new AdressService();
        Adress adressShipping = new Adress();
        try {
            // Asks if we want to remove the customer
            final int anwser = JOptionPane.showConfirmDialog(this, "Do you want to create adressShipping "
                + adressShipping.getId(), "Delete", JOptionPane.YES_NO_OPTION);
            if (anwser == JOptionPane.NO_OPTION) {
                return;
            }
            adressShipping.setNameReceiverAdress(jTextNameReceiverAdressShipp.getText());
            adressShipping.setNumAdress(jTextNumStreetShipp.getText());
            adressShipping.setNameStreetAdress(jTextStreetShipp.getText());
             adressShipping.setNameStreet2Adress(jTextStreet2Shipp.getText());
            adressShipping.setZipcodeAdress(jTextZipCodeShipp.getText());
            adressShipping.setCityAdress(jTextCityShipp.getText());
            adressShipping.setCountryAdress(jTextCountryShipp.getText());
            adressShipping.setCustomerShipAdress(new Customer(jTextLogin.getText()));
            adressShipping = serviceAdress.createAdress(adressShipping);
            adressShipList.add(adressShipping);
            // Create the customer
            JOptionPane.showMessageDialog(this, "adressShipping number " + adressShipping.getId()
                + " is creaeted", "info message", JOptionPane.INFORMATION_MESSAGE);
            jComboBoxShip.setModel(initAdressShipComboBoxModel(adressShipList));
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cannot access the customer service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);
        }
    }//GEN-LAST:event_jButtonCreateAdressShipActionPerformed

    private void jTextZipCodeShippActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextZipCodeShippActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextZipCodeShippActionPerformed

    private void jTextCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCompanyActionPerformed

    private void jTextEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmailActionPerformed

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        final String mname = "jButtonCreateActionPerformed";
        CustomerService serviceCustomer = new CustomerService();
        Customer customer = null;
        try {           
            customer = new Customer(jTextLogin.getText(), jTextFirstName.getText(), jTextLastName.getText(), jTextEmail.getText(), jTextPassword.getText());

            // Asks if we want to create the customer
            final int anwser = JOptionPane.showConfirmDialog(this, "Do you want to create customer "
                + customer.getId() + " " + customer.getLastNameCustomer(), "Delete", JOptionPane.YES_NO_OPTION);
            if (anwser == JOptionPane.NO_OPTION) {
                return;
            }
            customer = serviceCustomer.createCustomer(customer);           
            JOptionPane.showMessageDialog(this, "Customer number " + customer.getId()
                + " is creaeted", "info message", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cannot access the customer service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);
        }
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jTextPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPasswordActionPerformed

    private void jComboBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStatusActionPerformed

    }//GEN-LAST:event_jComboBoxStatusActionPerformed

    private void jButtonAdressShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdressShippingActionPerformed
        clearShippingAdress();
        jPanelShippingAdress.setVisible(true);
        jButtonCreateAdressShip.setVisible(true);
        
          
    }//GEN-LAST:event_jButtonAdressShippingActionPerformed

    private void jButtonCreateAdressBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateAdressBillActionPerformed
       
       final String mname = "jButtonCreateActionPerformed";
        AdressService serviceAdress = new AdressService();
        Adress adressBlling = new Adress();
        try {
            // Asks if we want to remove the customer
            final int anwser = JOptionPane.showConfirmDialog(this, "Do you want to create adressBlling "
                , "Delete", JOptionPane.YES_NO_OPTION);
            if (anwser == JOptionPane.NO_OPTION) {
                return;
            }
            adressBlling.setNameReceiverAdress(jTextNameReceiverAdressBill.getText());
            adressBlling.setNumAdress(jTextNumStreetBill.getText());
            adressBlling.setNameStreetAdress(jTextStreetBill.getText());
             adressBlling.setNameStreet2Adress(jTextStreet2Bill.getText());
            adressBlling.setZipcodeAdress(jTextZipCodeBill.getText());
            adressBlling.setCityAdress(jTextCityBill.getText());
            adressBlling.setCountryAdress(jTextCountryBill.getText());
            adressBlling.setCustomerBillAdress(new Customer(jTextLogin.getText()));
            adressBlling = serviceAdress.createAdress(adressBlling);
            adressBillList.add(adressBlling);
            // Create the customer
            JOptionPane.showMessageDialog(this, "adressBlling number " + adressBlling.getId()
                + " is creaeted", "info message", JOptionPane.INFORMATION_MESSAGE);
            jButtonCreateAdressShip.setVisible(false);
            jComboBoxBill.setModel(initAdressShipComboBoxModel(adressBillList));
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cannot access the adress service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);
        }

        
    }//GEN-LAST:event_jButtonCreateAdressBillActionPerformed

    private void jButtonAdressBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdressBillingActionPerformed
        clearBillingAdress();
        jPanelBillingAddress.setVisible(true);
        jButtonCreateAdressBill.setVisible(true);
        
    }//GEN-LAST:event_jButtonAdressBillingActionPerformed

    private void jComboBoxBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBillActionPerformed
     
        jComboBoxBill.setModel(initAdressBillComboBoxModel(adressBillList));
        final Adress adressBilling = ((Adress) jComboBoxBill.getSelectedItem());        
        setChampsBillingAdress(adressBilling);
        jButtonCreateAdressBill.setVisible(false);
        jComboBoxBill.setVisible(true);
        jButton2.setVisible(true);
       
    }//GEN-LAST:event_jComboBoxBillActionPerformed
   
    public void setChampsBillingAdress(Adress adress){
        jTextNameReceiverAdressBill.setText(adress.getNameReceiverAdress());
        jTextNumStreetBill.setText(adress.getNumAdress());
        jTextStreetBill.setText(adress.getNameStreetAdress());
        jTextStreet2Bill.setText(adress.getNameStreet2Adress());
        jTextZipCodeBill.setText(adress.getZipcodeAdress());
        jTextCityBill.setText(adress.getCityAdress());
        jTextCountryBill.setText(adress.getCountryAdress());
        jTextCompany.setText(adress.getNameCompanyReceiverAdress().getNameCompany());
        jTextIdAdressBill.setText(adress.getId());
        
    }
    public void clearBillingAdress(){
        jTextNameReceiverAdressBill.setText("");
        jTextNumStreetBill.setText("");
        jTextStreetBill.setText("");
        jTextStreet2Bill.setText("");
        jTextZipCodeBill.setText("");
        jTextCityBill.setText("");
        jTextCountryBill.setText("");
        jTextCompany.setText("");
        jTextIdAdressBill.setText("");
        
    }
    
     public void setChampsShippingAdress(Adress adress){
        jTextNameReceiverAdressShipp.setText(adress.getNameReceiverAdress());
        jTextNumStreetShipp.setText(adress.getNumAdress());
        jTextStreetShipp.setText(adress.getNameStreetAdress());
         jTextStreet2Shipp.setText(adress.getNameStreet2Adress());
        jTextZipCodeShipp.setText(adress.getZipcodeAdress());
        jTextCityShipp.setText(adress.getCityAdress());
        jTextCountryShipp.setText(adress.getCountryAdress());
        jTextCompany.setText(adress.getNameCompanyReceiverAdress().getNameCompany());
        jTextIdAdressShipp.setText(adress.getId());
        
    }
    public void clearShippingAdress(){
        jTextNameReceiverAdressShipp.setText("");
        jTextNumStreetShipp.setText("");
        jTextStreetShipp.setText("");
        jTextStreet2Bill.setText("");
        jTextZipCodeShipp.setText("");
        jTextCityShipp.setText("");
        jTextCountryShipp.setText("");
        jTextCompany.setText("");
        jTextIdAdressShipp.setText("");
        
    }
    
    public DefaultComboBoxModel initCustomersComboBoxModel(Collection customers) {
        return new DefaultComboBoxModel( initCustomersVector(customers) );
    }
    private Vector initCustomersVector(Collection customers) {
        final String mname = "initCustomersVector";
        Vector v = new Vector();
        v.addAll(customers);
        return v;
    }  
    
    
    public DefaultComboBoxModel initAdressShipComboBoxModel(Collection adressesChip) {
        return new DefaultComboBoxModel( initAdressShipVector(adressesChip) );
    }
    private Vector initAdressShipVector(Collection adressesChip) {
        final String mname = "initAdressChipVector";
        Vector v = new Vector();
        v.addAll(adressesChip);
        return v;
    }
    public DefaultComboBoxModel initAdressBillComboBoxModel(Collection adressesBill) {
        return new DefaultComboBoxModel( initAdressBillVector(adressesBill) );
    }
    private Vector initAdressBillVector(Collection adressesBill) {
        final String mname = "initAdressChipVector";
        Vector v = new Vector();
        v.addAll(adressesBill);
        return v;
    }
    
    
    
     public DefaultTreeModel initCustomersTreeModel(Collection customers) {
        return new DefaultTreeModel(initCustomerTree(customers));
    }

    private DefaultMutableTreeNode initCustomerTree(Collection  customers) {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("mes Customers");
            DefaultMutableTreeNode tnType1 = null;
            DefaultMutableTreeNode tnType2 = null;
            DefaultMutableTreeNode tnType3 = null;
            DefaultMutableTreeNode tnCustomer = null;
            
            tnType1 = new DefaultMutableTreeNode(
                    "Inactive");
            root.add(tnType1);
            tnType2 = new DefaultMutableTreeNode(
                    "Active");
            root.add(tnType2);

            tnType3 = new DefaultMutableTreeNode(
                    "BlackList");
            root.add(tnType3);
            
        for (Customer customer : (Collection <Customer>) customers) {                
                if(customer.getStatusCustomer() ==10){
                    tnType1.add(new DefaultMutableTreeNode(customer));
                }
                if(customer.getStatusCustomer() ==11){
                    tnType2.add(new DefaultMutableTreeNode(customer));
                }
                if(customer.getStatusCustomer() ==12){
                    tnType3.add(new DefaultMutableTreeNode(customer));
                }                
                }
        return root;

    }
    
    
    
    public DefaultTableModel initCustomersModel() {
        return new DefaultTableModel(initVectorTableData(), initVectorColumnNamesTable());
    }
    
    
    private Vector initVectorTableData() {
       final String mname = "initVectorTableData";
       CustomerService serviceCustomer = new CustomerService();
       Vector rowDada = new Vector();      
        try {
              Collection    customers = serviceCustomer.findCustomers();
            // rowDada.addAll(service.findContacts());
            for (Customer customer : (Collection <Customer>) customers) {
               Vector colData = null;
                colData = new Vector();
                colData.add(customer);
                rowDada.add(customer.getVector());
            }
        } catch (FinderException e) {
            JOptionPane.showMessageDialog(this, "Cannot access the contact service", "Error", JOptionPane.ERROR_MESSAGE);
            Trace.throwing(_cname, mname, e);

        }
        return rowDada; 
    }

    private Vector initVectorColumnNamesTable() {
        Vector<String> columnNames = new Vector();
        columnNames.add("Customer");
        columnNames.add("lOGIN");
        columnNames.add("First Name");
        columnNames.add("Last Name");
        columnNames.add("Email");
        columnNames.add("Comment");
        columnNames.add("Status");
        return columnNames;
    }

    public JComboBox getjComboBoxBill() {
        return jComboBoxBill;
    }

    public JComboBox getjComboBoxShip() {
        return jComboBoxShip;
    }
    
    
    
    
    protected final transient String _cname = this.getClass().getName();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdressBilling;
    private javax.swing.JButton jButtonAdressShipping;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonCreateAdressBill;
    private javax.swing.JButton jButtonCreateAdressShip;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox jComboBoxBill;
    private javax.swing.JComboBox jComboBoxShip;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabeNameReceiverAdressShipp;
    private javax.swing.JLabel jLabelCityBill;
    private javax.swing.JLabel jLabelCityShipp;
    private javax.swing.JLabel jLabelCompany;
    private javax.swing.JLabel jLabelCountryBill;
    private javax.swing.JLabel jLabelCountryShipp;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelIdAdressBill;
    private javax.swing.JLabel jLabelIdAdressShipp;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelNameReceiverAdressBill;
    private javax.swing.JLabel jLabelNumStreetBill;
    private javax.swing.JLabel jLabelNumStreetShipp;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelStreet2Bill;
    private javax.swing.JLabel jLabelStreet2Shipp;
    private javax.swing.JLabel jLabelStreetBill;
    private javax.swing.JLabel jLabelStreetShipp;
    private javax.swing.JLabel jLabelZipCodeBill;
    private javax.swing.JLabel jLabelZipCodeShipp;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAccount;
    private javax.swing.JPanel jPanelAccounts;
    private javax.swing.JPanel jPanelBillingAddress;
    private javax.swing.JPanel jPanelManage;
    private javax.swing.JPanel jPanelShippingAdress;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneTree1;
    private javax.swing.JTabbedPane jTabbedPaneManageAccount;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextCityBill;
    private javax.swing.JTextField jTextCityShipp;
    private javax.swing.JTextField jTextCompany;
    private javax.swing.JTextField jTextCountryBill;
    private javax.swing.JTextField jTextCountryShipp;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextFirstName;
    private javax.swing.JTextField jTextIdAdressBill;
    private javax.swing.JTextField jTextIdAdressShipp;
    private javax.swing.JTextField jTextLastName;
    private javax.swing.JTextField jTextLogin;
    private javax.swing.JTextField jTextNameReceiverAdressBill;
    private javax.swing.JTextField jTextNameReceiverAdressShipp;
    private javax.swing.JTextField jTextNumStreetBill;
    private javax.swing.JTextField jTextNumStreetShipp;
    private javax.swing.JTextField jTextPassword;
    private javax.swing.JTextField jTextSearch;
    private javax.swing.JTextField jTextStreet2Bill;
    private javax.swing.JTextField jTextStreet2Shipp;
    private javax.swing.JTextField jTextStreetBill;
    private javax.swing.JTextField jTextStreetShipp;
    private javax.swing.JTextField jTextZipCodeBill;
    private javax.swing.JTextField jTextZipCodeShipp;
    private javax.swing.JTree jTreeCustomers;
    // End of variables declaration//GEN-END:variables
}
